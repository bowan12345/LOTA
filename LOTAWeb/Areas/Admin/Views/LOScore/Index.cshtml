@model IEnumerable<LOTA.Model.DTO.Admin.CourseOfferingAssessmentDTO>
@{
    ViewData["Title"] = "LO Scores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var token = Html.AntiForgeryToken();
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-dark mb-0">
            <i class="fas fa-star text-primary me-2"></i>
            LO Scores 
        </h2>
    </div>

    <!-- Alert Messages -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search and Filter -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-white border-0 py-3">
            <div class="row align-items-center">
                <div class="col-lg-6 col-md-12 mb-3 mb-lg-0">
                    <h5 class="card-title mb-0 fw-bold">
                        <i class="fas fa-filter text-primary me-2"></i>
                        Course & Assessment
                    </h5>
                </div>
                <div class="col-lg-6 col-md-12">
                    <div class="d-flex justify-content-lg-end justify-content-start gap-2">
                        <div class="input-group input-group-sm" style="max-width: 300px;">
                            <span class="input-group-text bg-light border-end-0">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input type="text" class="form-control border-start-0" id="searchInput" 
                                   placeholder="Search qualification, course name or code...">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Qualifications and Course Offerings -->
    @if (Model != null && Model.Any())
    {
        var qualificationGroups = Model.GroupBy(co => co.TrimesterCourse.Course.Qualification).OrderBy(g => g.Key?.QualificationName);

        @foreach (var qualificationGroup in qualificationGroups)
        {
            var qualification = qualificationGroup.Key;
            var qualificationId = $"qualification_{qualification?.Id?.Replace("-", "_")}";
            
            <div class="card border-0 shadow-sm mb-4 qualification-section" 
                 data-qualification-name="@qualification?.QualificationName?.ToLower()">
                <div class="card-header bg-gradient-primary text-white py-3">
                    <div class="row align-items-center">
                        <div class="col-lg-8 col-md-12 mb-2 mb-lg-0">
                            <h5 class="card-title mb-0 fw-bold">
                                <i class="fas fa-award me-2"></i>
                                @(qualification?.QualificationName ?? "Unknown Qualification")
                                <span class="badge bg-light text-dark ms-2">@qualificationGroup.Count() Course(s)</span>
                            </h5>
                            @if (qualification?.QualificationType != null)
                            {
                                <small class="text-light opacity-75">
                                    @qualification.QualificationType.QualificationTypeName
                                </small>
                            }
                        </div>
                        <div class="col-lg-4 col-md-12 text-lg-end">
                            <button class="btn btn-sm btn-outline-light" onclick="toggleQualification('@qualificationId')">
                                <i class="fas fa-chevron-down me-1" id="qual_icon_@qualificationId"></i>
                                Toggle All
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="card-body p-0">
                    <div class="qualification-content" id="qual_content_@qualificationId">
                        @foreach (var courseOffering in qualificationGroup.OrderBy(co => co.TrimesterCourse.Course.CourseName))
                        {
                            var courseId = $"course_{courseOffering.TrimesterCourse.Id?.Replace("-", "_")}";
                            var courseName = courseOffering.TrimesterCourse.Course.CourseName?.ToLower();
                            var courseCode = courseOffering.TrimesterCourse.Course.CourseCode?.ToLower();
                            
                            <div class="course-offering-section" 
                                 data-course-name="@courseName" 
                                 data-course-code="@courseCode"
                                 data-qualification-name="@qualification?.QualificationName?.ToLower()">
                                <div class="row align-items-center">
                                    <!-- Course Header -->
                                    <div class="col-lg-6 col-md-12">
                                        <div class="course-header-left" onclick="toggleCourseOffering('@courseId')" style="cursor: pointer;">
                                            <div class="course-icon">
                                                <i class="fas fa-chevron-down me-2" id="icon_@courseId"></i>
                                                <i class="fas fa-book text-primary"></i>
                                            </div>
                                            <div class="course-main-info">
                                                <h6 class="course-name mb-1">@courseOffering.TrimesterCourse.Course.CourseName</h6>
                                                <div class="course-code text-muted small">@courseOffering.TrimesterCourse.Course.CourseCode</div>
                                                <div class="trimester-name text-muted small">
                                                    @($"Trimester {courseOffering.TrimesterCourse.Trimester.TrimesterNumber} {courseOffering.TrimesterCourse.Trimester.AcademicYear}")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Assessment Summary -->
                                    <div class="col-lg-4 col-md-8">
                                        <div class="assessment-summary">
                                            <div class="row">
                                                <div class="col-6">
                                                    <div class="summary-item">
                                                        <span class="summary-label">Assessments:</span>
                                                        <span class="summary-value badge bg-info">@courseOffering.Assessments.Count</span>
                                                    </div>
                                                </div>
                                                                                                 <div class="col-6">
                                                     <div class="summary-item">
                                                         <span class="summary-label">Enrolled Students:</span>
                                                         <span class="summary-value badge bg-success">
                                                             @courseOffering.Students.Count
                                                         </span>
                                                     </div>
                                                 </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Action Button -->
                                    <div class="col-lg-2 col-md-4">
                                        <div class="text-end">
                                             <a href="@Url.Action("Score", "LOScore", new { area = "Admin", id = courseOffering.TrimesterCourse.Id })" 
                                                class="btn btn-sm btn-success">
                                                 <i class="fas fa-edit me-1"></i>
                                                 Manage Scores
                                             </a>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Collapsible Assessment Details -->
                                <div class="course-content" id="content_@courseId" style="display: none;">
                                    <div class="border-top pt-3 px-3 pb-3">
                                        @if (courseOffering.Assessments.Any())
                                        {
                                            <div class="assessments-list">
                                                <h6 class="text-muted mb-3">
                                                    <i class="fas fa-clipboard-check me-2"></i>
                                                    Assessments
                                                </h6>
                                                <div class="row">
                                                    @foreach (var assessment in courseOffering.Assessments.OrderBy(a => a.AssessmentName))
                                                    {
                                                        <div class="col-md-6 col-lg-4 mb-3">
                                                            <div class="assessment-item p-3 border rounded h-100">
                                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                                    <h6 class="mb-1 text-truncate">@assessment.AssessmentName</h6>
                                                                    <span class="badge bg-dark">@assessment.Score</span>
                                                                </div>
                                                                <div class="text-muted small">
                                                                    <div><i class="fas fa-weight me-1"></i>Weight: @assessment.Weight%</div>
                                                                    <div><i class="fas fa-tag me-1"></i>@(assessment.AssessmentType?.AssessmentTypeName ?? "Unknown Type")</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="text-center text-muted py-3">
                                                <i class="fas fa-info-circle fa-2x mb-2"></i>
                                                <p class="mb-0">No assessments found for this course offering.</p>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center text-muted py-5">
                <i class="fas fa-folder-open fa-3x mb-3"></i>
                <h5>No Course Offerings Found</h5>
                <p>There are no active course offerings in the current trimester.</p>
            </div>
        </div>
    }
</div>

<style>
         .bg-gradient-primary {
         background: linear-gradient(135deg, #28a745 0%, #28a745 60%, #007bff 100%);
     }
    
    .qualification-section {
        transition: all 0.3s ease;
    }
    
    .qualification-section:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    .course-offering-section {
        border-bottom: 1px solid #e9ecef;
        transition: all 0.3s ease;
        background-color: #ffffff;
        margin-bottom: 8px;
        border-radius: 8px;
    }

    .course-offering-section:hover {
        background-color: #f8f9fa;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .course-header-left {
        display: flex;
        align-items: center;
        padding: 1rem;
        transition: all 0.3s ease;
        border-radius: 6px;
        background: linear-gradient(135deg, #ffffff 0%, #f0f8f0 50%, #e8f5e8 100%);
    }

    .course-header-left:hover {
        background: linear-gradient(135deg, #f8fff8 0%, #e8f5e8 50%, #d4edda 100%);
        border-radius: 6px;
        transform: translateX(4px);
    }

    .course-icon {
        margin-right: 1rem;
        color: #28a745;
    }

    .course-name {
        margin: 0;
        font-weight: 600;
        color: #212529;
    }

    .course-code {
        color: #6c757d;
        font-size: 0.875rem;
    }

    .trimester-name {
        font-size: 0.75rem;
    }

    .assessment-summary {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        height: 100%;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
        padding: 4px 0;
    }

    .summary-label {
        color: #495057;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .summary-value {
        font-weight: 700;
        font-size: 1rem;
    }

    .summary-value.badge {
        padding: 6px 12px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .course-content {
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .assessment-item {
        background-color: white;
        transition: all 0.3s ease;
    }

    .assessment-item:hover {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .assessments-list {
        padding: 0 1rem 1rem 1rem;
    }

    /* Search functionality */
    .qualification-section.hidden,
    .course-offering-section.hidden {
        display: none !important;
    }
</style>

<script>
    // Toggle qualification visibility
    function toggleQualification(qualificationId) {
        const content = document.getElementById(`qual_content_${qualificationId}`);
        const icon = document.getElementById(`qual_icon_${qualificationId}`);
        
        if (content.style.display === 'none') {
            content.style.display = 'block';
            icon.classList.remove('fa-chevron-down');
            icon.classList.add('fa-chevron-up');
        } else {
            content.style.display = 'none';
            icon.classList.remove('fa-chevron-up');
            icon.classList.add('fa-chevron-down');
        }
    }

    // Toggle course offering visibility
    function toggleCourseOffering(courseId) {
        const content = document.getElementById(`content_${courseId}`);
        const icon = document.getElementById(`icon_${courseId}`);
        
        if (content.style.display === 'none') {
            content.style.display = 'block';
            icon.classList.remove('fa-chevron-down');
            icon.classList.add('fa-chevron-up');
        } else {
            content.style.display = 'none';
            icon.classList.remove('fa-chevron-up');
            icon.classList.add('fa-chevron-down');
        }
    }

    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const qualificationSections = document.querySelectorAll('.qualification-section');
        const courseSections = document.querySelectorAll('.course-offering-section');
        
        qualificationSections.forEach(section => {
            const qualificationName = section.getAttribute('data-qualification-name') || '';
            const hasMatchingCourses = Array.from(section.querySelectorAll('.course-offering-section')).some(courseSection => {
                const courseName = courseSection.getAttribute('data-course-name') || '';
                const courseCode = courseSection.getAttribute('data-course-code') || '';
                return courseName.includes(searchTerm) || courseCode.includes(searchTerm);
            });
            
            if (qualificationName.includes(searchTerm) || hasMatchingCourses) {
                section.classList.remove('hidden');
            } else {
                section.classList.add('hidden');
            }
        });
        
        courseSections.forEach(section => {
            const courseName = section.getAttribute('data-course-name') || '';
            const courseCode = section.getAttribute('data-course-code') || '';
            const qualificationName = section.getAttribute('data-qualification-name') || '';
            
            if (courseName.includes(searchTerm) || courseCode.includes(searchTerm) || qualificationName.includes(searchTerm)) {
                section.classList.remove('hidden');
            } else {
                section.classList.add('hidden');
            }
        });
    });

    // Initialize tooltips
    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
</script>
